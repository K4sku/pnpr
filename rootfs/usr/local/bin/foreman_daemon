#!/usr/bin/env ruby

require 'fileutils'

APP_ROOT = "/home/webapp/webapp/current"
FOREMAN_BIN = "/home/webapp/.rbenv/shims/foreman"
PROCFILE = "#{APP_ROOT}/Procfile"
PIDFILE = "/home/webapp/webapp/shared/foreman.pid"
LOG_DIR = "/home/webapp/webapp/shared/logs"
RUN_AS_USER = "webapp"
DAEMON_PIDFILE = "/home/webapp/webapp/foreman_daemon.pid"

def daemonize
  exit if fork
  Process.setsid
  exit if fork
  Dir.chdir '/'
  File.umask 0000

  STDIN.reopen '/dev/null'
  STDOUT.reopen '/dev/null', 'a'
  STDERR.reopen STDOUT
end

def change_user_to_webapp
  user = Etc.getpwnam(RUN_AS_USER)
  Process::UID.change_privilege(user.uid)
  Process::GID.change_privilege(user.gid)
end

def run_script
  change_user_to_webapp
  foreman_pid = spawn("#{FOREMAN_BIN} start -f #{PROCFILE} -d #{APP_ROOT} > #{LOG_DIR}/foreman.log 2>&1")
  Process.detach(foreman_pid)
  File.write(PIDFILE, foreman_pid.to_s)
end

def write_pid_file
  File.write(DAEMON_PIDFILE, Process.pid.to_s)
end

def setup_signal_handling
  [:INT, :QUIT, :TERM].each do |signal|
    Signal.trap(signal) do
      if File.exist?(PIDFILE)
        foreman_pid = File.read(PIDFILE).to_i
        Process.kill(signal, foreman_pid)
        FileUtils.rm_f(PIDFILE)
      end
      FileUtils.rm_f(DAEMON_PIDFILE)
      puts "Daemon terminated by #{signal}"
      exit
    end
  end
end


def start
  if File.exist?(DAEMON_PIDFILE)
    puts "Daemon is already running"
    exit 1
  end

  daemonize
  write_pid_file
  setup_signal_handling
  run_script
end

def stop
  if File.exist?(DAEMON_PIDFILE)
    pid = File.read(DAEMON_PIDFILE).to_i
    Process.kill('TERM', pid)
  else
    puts "Daemon is not running"
  end
end

def status
  if File.exist?(DAEMON_PIDFILE)
    pid = File.read(DAEMON_PIDFILE).to_i
    puts "Daemon is running with PID: #{pid}"
  else
    puts "Daemon is not running"
  end
end

if ARGV.empty?
  puts "Usage: ./daemonize.rb <start|stop|status>"
  exit 1
end

case ARGV[0].downcase
when 'start'
  start
when 'stop'
  stop
when 'status'
  status
else
  puts "Unknown command. Usage: ./daemonize.rb <start|stop|status>"
end
