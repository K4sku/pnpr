#!/usr/bin/env ruby

require 'fileutils'
require 'etc'

APP_ROOT = "/home/webapp/webapp/current"
FOREMAN_BIN = "/home/webapp/.rbenv/shims/foreman"
PROCFILE = "#{APP_ROOT}/Procfile"
PIDFILE = "/home/webapp/webapp/shared/foreman.pid"
LOG_DIR = "/home/webapp/webapp/shared/logs"
RUN_AS_USER = "webapp"
DAEMON_PIDFILE = "/home/webapp/webapp/foreman_daemon.pid"

def change_user_to_webapp
  user = Etc.getpwnam(RUN_AS_USER)
  Process::UID.change_privilege(user.uid)
  Process::GID.change_privilege(user.gid)
rescue => e
  puts "Should be run as webapp user"
  puts "Error: #{e.message}"
  exit 1
end

def start_foreman
  change_user_to_webapp
  Dir.chdir APP_ROOT
  foreman_pid = spawn("#{FOREMAN_BIN} start -f #{PROCFILE} -d #{APP_ROOT} > #{LOG_DIR}/foreman.log 2>&1")
  Process.detach(foreman_pid)
  File.write(PIDFILE, foreman_pid.to_s)
  puts "Foreman started with PID: #{foreman_pid}"
end

def stop_foreman
  if process_alive?(PIDFILE)
    foreman_pid = File.read(PIDFILE).to_i
    Process.kill('TERM', foreman_pid)
    FileUtils.rm_f(PIDFILE)
    puts "Foreman stopped"
  else
    puts "Foreman is not running"
  end
end

def process_alive?(pidfile)
  return false unless File.exist?(pidfile)

  pid = File.read(pidfile).to_i
  begin
    Process.kill(0, pid)
    return true
  rescue Errno::ESRCH
    return false
  rescue Errno::EPERM
    return true
  end
end

def foreman_status
  if process_alive?(PIDFILE)
    foreman_pid = File.read(PIDFILE).to_i
    puts "Foreman is running with PID: #{foreman_pid}"
  else
    puts "Foreman is not running"
    FileUtils.rm_f(PIDFILE) if File.exist?(PIDFILE)
  end
end

if ARGV.empty?
  puts "Usage: foremand <start|stop|status>"
  exit 1
end

case ARGV[0].downcase
when 'start'
  start_foreman
when 'stop'
  stop_foreman
when 'status'
  foreman_status
else
  puts "Unknown command. Usage: ./daemonize.rb <start|stop|status>"
end
